{"version":3,"sources":["config.js","NotefulContext.js","Header/Header.js","FolderList/FolderError.js","FolderList/FolderList.js","FolderItem/FolderItem.js","NoteList/NoteError.js","NoteItem/NoteItem.js","NoteList/NoteList.js","Note/Note.js","ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","EditFolder/EditFolder.js","EditNote/EditNote.js","App.js","index.js"],"names":["process","NotefulContext","React","createContext","folders","notes","deleteNote","addNote","addFolder","addErrorNotes","addErrorFolders","notesError","updateFolders","updateNotes","handleClickDeleteFolder","Header","props","to","FolderError","state","hasError","error","errorInfo","this","children","Component","FolderList","folderId","contextType","useContext","config","parseInt","match","params","id_folder","className","undefined","onClick","map","folder","key","id","role","aria-label","name","filter","note","length","FolderItem","noteId","context","activeNote","find","activeFolder","history","goBack","NoteError","NoteItem","handleClickDelete","e","preventDefault","fetch","method","headers","authorization","then","res","ok","status","json","data","location","pathname","includes","push","catch","value","modified","toString","split","NoteList","foldernotes","Note","content","ValidationError","message","AddFolder","apiError","formValid","errorCount","errors","updateErrorCount","count","Object","values","forEach","val","setState","valid","validateField","err","trim","handleChange","event","target","handleClickCancel","handleSubmit","body","JSON","stringify","Authorization","onSubmit","noValidate","htmlFor","type","required","aria-required","aria-describedby","aria-invalid","onChange","disabled","AddNote","Date","UTC","EditFolder","resetFields","newFields","newFolder","Promise","reject","responseData","EditNote","newNote","routes","path","exact","header","aside","section","App","foldersError","deleteFolderId","newNotes","deleteFolder","newFolders","getNotes","setFolders","setNotes","getFolders","Error","updatedFolder","updatedNote","contextObj","Provider","A","component","S","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.5f940c4e.chunk.js","sourcesContent":["// hosted on Heroku using PostgreSQL db\nexport default {\n\tDATASOURCE: `postgresql`,\n\tNOTES_ENDPOINT: `https://masonmeier-noteful-api.herokuapp.com/api/notes?postgres://swbzwnxvoldtsr:144b3100c62e0c84da64b5b4dfb50e25b8a67d54ec1494ad8ca434b28ac6d32a@ec2-52-202-146-43.compute-1.amazonaws.com:5432/dcc32gl03qe8vghttps://masonmeier-noteful-api.herokuapp.com/`,\n\tFOLDERS_ENDPOINT: `https://masonmeier-noteful-api.herokuapp.com/api/folders?postgres://swbzwnxvoldtsr:144b3100c62e0c84da64b5b4dfb50e25b8a67d54ec1494ad8ca434b28ac6d32a@ec2-52-202-146-43.compute-1.amazonaws.com:5432/dcc32gl03qe8vghttps://masonmeier-noteful-api.herokuapp.com/`,\n\tAPI_KEY: process.env.REACT_APP_API_KEY\n};\n\n","import React from 'react';\n\n// nothing else needs to be here because the context is defined in App.js,as contextObj - THIS IS ONLY TRUE IF NOT RUNNING TESTS\n\n// IF RUNNING TESTS then need to copy over references to objects and methods:\nconst NotefulContext = React.createContext({\n\tfolders: [],\n\tnotes: [],\n\tdeleteNote: () => {},\n\taddNote: () => {},\n\taddFolder: () => {},\n\taddErrorNotes: () => {},\n\taddErrorFolders: () => {},\n\tnotesError: () => {},\n\tupdateFolders: () => {},\n\tupdateNotes: () => {},\n\thandleClickDeleteFolder: () => {}\n});\n\nexport default NotefulContext;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n\treturn (\n\t\t<header>\n\t\t\t<span>\n\t\t\t\t<h1>\n\t\t\t\t\t<Link to=\"/\">Noteful</Link>\n\t\t\t\t</h1>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\ta React app\n\t\t\t\t<br />\n\t\t\t\t(everything takes a couple of seconds to load)\n\t\t\t</span>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass FolderError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this folder.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default FolderError;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport FolderError from './FolderError';\nimport NotefulContext from '../NotefulContext';\nimport config from '../config';\n\nconst FolderList = props => {\n\tconst contextType = useContext(NotefulContext);\n\tconst { notes, folders, handleClickDeleteFolder } = contextType;\n\n\tlet folderId;\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tfolderId = parseInt(props.match.params.id_folder);\n\t} else {\n\t\tfolderId = props.match.params.id_folder;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<>\n\t\t\t\t\t<h2>Folders</h2>\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t<NavLink to={'/add-folder'}>\n\t\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t{props.match.params.id_folder !== undefined ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavLink to={`/edit-folder/${props.match.params.id_folder}`}>\n\t\t\t\t\t\t\t\t<button className=\"btn-edit\">&#9998;</button>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn-delete\"\n\t\t\t\t\t\t\t\tonClick={() => handleClickDeleteFolder(folderId, props)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : null}\n\t\t\t\t</>\n\t\t\t</header>\n\t\t\t<ul>\n\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={folder.id}\n\t\t\t\t\t\tclassName={folder.id === folderId ? ' active' : null}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FolderError>\n\t\t\t\t\t\t\t<NavLink to={`/folders/${folder.id}`}>\n\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"Folder\">\n\t\t\t\t\t\t\t\t\t&#x1F4C2;\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t&nbsp;{folder.name}&nbsp;(\n\t\t\t\t\t\t\t\t{notes.filter(note => note.id_folder === folder.id).length})\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</FolderError>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default FolderList;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\nFolderList.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport NotefulContext from '../NotefulContext';\nimport config from '../config';\n\nconst FolderItem = props => {\n\tconst context = useContext(NotefulContext);\n\tconst { folders, notes } = context;\n\n\tlet noteId;\n\n\t// use the selected noteId to\n\t// - use the notes object & get the id_folder\n\t// - from the folders object, use the id_folder to get the note's parent folder\n\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tnoteId = parseInt(props.match.params.noteId);\n\t} else {\n\t\tnoteId = props.match.params.noteId;\n\t}\n\n\tconst activeNote = notes ? notes.find(note => note.id === noteId) : '';\n\n\tif (!activeNote) return 'Sorry, no note found.';\n\n\tconst id_folder = activeNote.id_folder;\n\tconst activeFolder = folders.filter(folder => folder.id === id_folder);\n\n\treturn (\n\t\t<>\n\t\t\t{!activeFolder\n\t\t\t\t? null\n\t\t\t\t: activeFolder.map(folder => (\n\t\t\t\t\t\t<header key={folder.id}>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<NavLink to={`/edit-folder/${folder.id}`}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn-edit\">&#9998;</button>\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button className=\"btn-save\" onClick={props.history.goBack}>\n\t\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</header>\n\t\t\t\t  ))}\n\t\t</>\n\t);\n};\n\nexport default FolderItem;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\n// AND\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nFolderItem.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t),\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass NoteError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this note.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default NoteError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport config from '../config';\nimport NotefulContext from '../NotefulContext';\n\n// this function 1st deletes via the API, then from state\n// context.deleteNote = the update function, to update state in context\n// Using a CLASS instead of a functional component I do *** NOT *** have to\n//  pass in PROPS to get history, location and match (AND props.note.id) AND pass in CONTEXT for deleteNote function because there is no other way for the handleClickDelete function\n// - to know what is in Context\n// - to know history, location and match\n\nexport default class NoteItem extends React.Component {\n\t// need to grab NotefulContext (globals)\n\tstatic contextType = NotefulContext;\n\n\thandleClickDelete = e => {\n\t\te.preventDefault();\n\n\t\tconst noteId = this.props.note.id;\n\n\t\tfetch(config.NOTES_ENDPOINT + `/${noteId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\t// I think b/c cors, typecode gives a res.status = 404 and an EMPTY error object when try to delete note so,\n\t\t\t\tif (!res.ok || res.status === '404') {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t// throw res.status instead of error b/c error is an empty object\n\t\t\t\t\t\tthrow res.status;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// call the callback function when the request is successful\n\t\t\t\t// this is where the App component can remove it from state\n\t\t\t\t// ie. update the notes stored in state\n\t\t\t\t// which also updates the notes stored in context\n\t\t\t\tthis.context.deleteNote(noteId);\n\n\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\tif (this.props.location.pathname.includes('/notes/')) {\n\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t}\n\n\t\t\t\t// if have selected a folder, need to refresh after delete a note\n\t\t\t\tif (this.props.location.pathname.includes('/folders/')) {\n\t\t\t\t\tthis.props.history.push(this.props.location.pathname);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t// WORKAROUND to handle EMPTY error object and res.status = 404\n\t\t\t\tif (error !== 404) {\n\t\t\t\t\tthis.context.addErrorNotes(error);\n\t\t\t\t}\n\n\t\t\t\tif (error === 404) {\n\t\t\t\t\tthis.context.deleteNote(noteId);\n\n\t\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\t\tif (this.props.location.pathname.includes('/notes/')) {\n\t\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// if have selected a folder, need to refresh after delete a note\n\t\t\t\t\tif (this.props.location.pathname.includes('/folders/')) {\n\t\t\t\t\t\tthis.props.history.push(this.props.location.pathname);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// to see noteItem notesError in ui & trigger NoteError boundary:\n\t\t// this.context.addErrorNotes({ value: 'notesItemAPI errorMessage' });\n\t\treturn (\n\t\t\t<div className=\"note-item\">\n\t\t\t\t{this.context.notesError && (\n\t\t\t\t\t<p className=\"error\">{this.context.notesError.value}</p>\n\t\t\t\t)}\n\t\t\t\t{/*\n\t\t\tTHIS CAUSED A staticContent ERROR:\n\t\t\t<NavLink to={`/notes/${note.id}`} {...props}>\n\t\t\t\t<h3>{note.title}</h3>\n\t\t\t</NavLink> */}\n\t\t\t\t<NavLink\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: `/notes/${this.props.note.id}`,\n\t\t\t\t\t\tprops: this.props\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h3>{this.props.note.name}</h3>\n\t\t\t\t</NavLink>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\tModified on{' '}\n\t\t\t\t\t\t<span className=\"note-datemod\">\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{this.props.note.modified\n\t\t\t\t\t\t\t\t? this.props.note.modified.toString().split('T', 1)[0]\n\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<NavLink to={`/edit-note/${this.props.note.id}`}>\n\t\t\t\t\t\t\t<button className=\"btn-edit-note\">&#9998;</button>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn-delete-note\"\n\t\t\t\t\t\t\tonClick={this.handleClickDelete}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteItem.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n\n// default values\n// ONLY for props that are NOT required\n// so do NOT create NoteItem.defaultProps\n// NoteItem.defaultProps = {\n// \tnote: {\n// \t\tid: '',\n// \t\tname: '',\n// \t\tmodified: ''\n// \t}\n// };\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport NoteError from './NoteError';\nimport NoteItem from '../NoteItem/NoteItem';\nimport NotefulContext from '../NotefulContext';\n\nimport config from '../config';\n\nconst NoteList = props => {\n\t// need to grab NotefulContext (globals)\n\tconst contextType = useContext(NotefulContext);\n\tconst { notes } = contextType;\n\n\tlet folderId;\n\n\t// if selected a folder, show only the notes in that folder\n\t// otherwise show all notes from all folders\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tfolderId = parseInt(props.match.params.id_folder);\n\t} else {\n\t\tfolderId = props.match.params.id_folder;\n\t}\n\n\tconst foldernotes = props.match.params.id_folder\n\t\t? notes.filter(note => note.id_folder === folderId)\n\t\t: notes;\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h2>Notes</h2>\n\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t<NavLink\n\t\t\t\t\t// if just passing url:\n\t\t\t\t\t// to={'/add-note'}\n\n\t\t\t\t\t// to pass selected id_folder:\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/add-note',\n\t\t\t\t\t\tstate: { id_folder: props.match.params.id_folder }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t</NavLink>\n\t\t\t</header>\n\t\t\t{foldernotes.length > 0 ? (\n\t\t\t\tfoldernotes.map(note => (\n\t\t\t\t\t<section key={note.id}>\n\t\t\t\t\t\t<NoteError>\n\t\t\t\t\t\t\t<div className=\"note\">\n\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t{...note}\n\t\t\t\t\t\t\tuse spread here IF want whole note object, and then get inside NoteItem via note.key\n\t\t\t\t\t\t\talternative is\n\t\t\t\t\t\t\tnote={note} and in NoteItem get via props.note.key\n\n\t\t\t\t\t\t\tNOTE:\n\t\t\t\t\t\t\tMUST pass {...props} to have the history, location, and match props inside NoteItem\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t<NoteItem note={note} {...props} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NoteError>\n\t\t\t\t\t</section>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<section className=\"no-border\">\n\t\t\t\t\t<div className=\"note\">No notes in this folder.</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default NoteList;\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteList.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NoteItem from '../NoteItem/NoteItem';\n\nimport NotefulContext from '../NotefulContext';\nimport config from '../config';\n\nconst Note = props => {\n\t// need to grab NotefulContext (globals)\n\tconst context = useContext(NotefulContext);\n\tconst { notes } = context;\n\tlet noteId;\n\n\t// NOTE\n\t// reloading the browser wipes the context from memory\n\t// so need to handle if user reloads the browser and its undefined\n\t// done by adding || {} here AND : '' for props.modified in NoteItem too\n\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tnoteId = parseInt(props.match.params.noteId);\n\t} else {\n\t\tnoteId = props.match.params.noteId;\n\t}\n\n\tconst note = notes.find(note => note.id === noteId) || {};\n\n\treturn (\n\t\t<section>\n\t\t\t<div className=\"note\">\n\t\t\t\t<NoteItem {...props} note={note} />\n\t\t\t\t<p className=\"note-content\">{note.content}</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Note;\n\n// to catch bugs\n// check that get a notes array that has id, name, content, and modified\n// this array is the \"notes\" variable coming from context\nNote.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tid_folder: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tcontent: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n","import React from 'react';\n\nexport default function ValidationError(props) {\n\tif (props.message) {\n\t\treturn (\n\t\t\t<div className=\"error\" id={props.id}>\n\t\t\t\t{props.message}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <></>;\n}\n","import React from 'react';\nimport config from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass AddFolder extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tname: '',\n\t\terrors: {\n\t\t\tname: 'You must enter a folder name'\n\t\t}\n\t};\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.trim().length === 0) {\n\t\t\t\terr = 'Folder name is required';\n\t\t\t} else if (value.trim().length < 3) {\n\t\t\t\terr = 'Folder name must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { name } = e.target;\n\t\tconst folder = {\n\t\t\tname: name.value\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.FOLDERS_ENDPOINT, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(folder),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// clear form values\n\t\t\t\tname.value = '';\n\n\t\t\t\tthis.context.addFolder(data);\n\n\t\t\t\t// select newly created folder:\n\t\t\t\tthis.props.history.push(`/folders/${data.id}`);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form className=\"addFolderForm\" onSubmit={this.handleSubmit} noValidate>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Folder</legend>\n\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\taria-label=\"Folder Name\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"folderNameError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError message={errors.name} id={'folderNameError'} />\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Folder\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddFolder;\n","import React from 'react';\nimport config from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass AddNote extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tid_folder: this.props.location.state.id_folder || '', // use selected id_folder passed in via NavLink\n\t\tname: '',\n\t\tcontent: '',\n\t\terrors: {\n\t\t\tid_folder:\n\t\t\t\t!this.props.location.state.id_folder && 'You must select a folder', // error only if no id_folder passed in via NavLink\n\t\t\tname: 'You must enter a note title',\n\t\t\tcontent: 'You must enter a description'\n\t\t}\n\t};\n\n\t// to see addNote apiError in ui:\n\t/*\n\tstate = {\n\t\tapiError: 'addNote apiError errorMessage',\n\t\t...\n\t*/\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'Note title is required';\n\t\t\t} else if (value.length < 3) {\n\t\t\t\terr = 'Note title must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'id_folder') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must select a folder';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'content') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must enter a description';\n\t\t\t} else if (value.length < 5) {\n\t\t\t\terr = 'The description must be at least 5 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value.trim());\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\t// this.updateErrorCount();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { id_folder, name, content } = e.target;\n\t\tconst note = {\n\t\t\tid_folder: id_folder.value,\n\t\t\tname: name.value,\n\t\t\tcontent: content.value,\n\t\t\tmodified: new Date(Date.UTC())\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.NOTES_ENDPOINT, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(note),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// clear form values\n\t\t\t\tid_folder.value = '';\n\t\t\t\tname.value = '';\n\t\t\t\tcontent.value = '';\n\n\t\t\t\tthis.context.addNote(data);\n\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push(`/folders/${id_folder.value}`);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\tconst folders = this.context.folders;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Note</legend>\n\t\t\t\t\t<label htmlFor=\"id_folder\">Folder</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"id_folder\"\n\t\t\t\t\t\tname=\"id_folder\"\n\t\t\t\t\t\taria-label=\"Folder Id\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"id_folderError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tvalue={this.state.id_folder}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select a folder</option>\n\t\t\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t\t\t<option key={folder.id} value={folder.id}>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t{errors.id_folder.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'id_folderError'} message={errors.id_folder} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"name\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteTitleError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'noteTitleError'} message={errors.name} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"content\">Description</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"content\"\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Description\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteDescriptionError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.content.length > 0 && (\n\t\t\t\t\t\t<ValidationError\n\t\t\t\t\t\t\tid={'noteDescriptionError'}\n\t\t\t\t\t\t\tmessage={errors.content}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Note\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddNote;\n","import React from 'react';\nimport config from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass EditFolder extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: true,\n\t\terrorCount: null,\n\t\tid: this.props.match.params.id_folder,\n\t\tname: '',\n\t\terrors: {\n\t\t\tname: ''\n\t\t}\n\t};\n\n\t// get folder to be updated\n\tcomponentDidMount() {\n\t\tconst { id_folder } = this.props.match.params;\n\t\tfetch(config.FOLDERS_ENDPOINT + `/${id_folder}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) return res.json().then(error => Promise.reject(error));\n\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(responseData => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: responseData.id,\n\t\t\t\t\tname: responseData.name\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t}\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.trim().length === 0) {\n\t\t\t\terr = 'Folder name is required';\n\t\t\t} else if (value.trim().length < 3) {\n\t\t\t\terr = 'Folder name must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\tresetFields = newFields => {\n\t\tthis.setState({\n\t\t\tid: newFields.id || '',\n\t\t\tname: newFields.name || ''\n\t\t});\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { id_folder } = this.props.match.params;\n\t\tconst { id, name } = this.state;\n\t\tconst newFolder = { id, name };\n\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.FOLDERS_ENDPOINT + `/${id_folder}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\tbody: JSON.stringify(newFolder),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) return res.json().then(error => Promise.reject(error));\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.resetFields(newFolder);\n\t\t\t\tthis.context.updateFolders(newFolder);\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<form\n\t\t\t\t\tclassName=\"editFolderForm\"\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tnoValidate\n\t\t\t\t>\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend>Edit Folder</legend>\n\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\taria-label=\"Folder Name\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\t\taria-describedby=\"folderNameError\"\n\t\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t\t<ValidationError message={errors.name} id={'folderNameError'} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSave Folder\n\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\tclassName=\"btn-delete-folder\"\n\t\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tthis.context.handleClickDeleteFolder(this.state.id, this.props)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button> */}\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\n\t\t\t\t{this.state.formValid ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-delete-folder btn-position\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tthis.context.handleClickDeleteFolder(this.state.id, this.props)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t) : null}\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default EditFolder;\n","import React from 'react';\nimport config from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass EditNote extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: true,\n\t\terrorCount: null,\n\t\tid: '',\n\t\tid_folder: '',\n\t\tname: '',\n\t\tcontent: '',\n\t\terrors: {\n\t\t\tid_folder: '',\n\t\t\tname: '',\n\t\t\tcontent: ''\n\t\t}\n\t};\n\n\t// to see addNote apiError in ui:\n\t/*\n\tstate = {\n\t\tapiError: 'addNote apiError errorMessage',\n\t\t...\n\t*/\n\n\t// get note to be updated\n\tcomponentDidMount() {\n\t\tconst { noteId } = this.props.match.params;\n\t\tfetch(config.NOTES_ENDPOINT + `/${noteId}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) return res.json().then(error => Promise.reject(error));\n\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(responseData => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: responseData.id,\n\t\t\t\t\tname: responseData.name,\n\t\t\t\t\tid_folder: responseData.id_folder,\n\t\t\t\t\tcontent: responseData.content\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t}\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'Note title is required';\n\t\t\t} else if (value.length < 3) {\n\t\t\t\terr = 'Note title must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'id_folder') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must select a folder';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'content') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must enter a description';\n\t\t\t} else if (value.length < 5) {\n\t\t\t\terr = 'The description must be at least 5 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\tresetFields = newFields => {\n\t\tthis.setState({\n\t\t\tid: newFields.id || '',\n\t\t\tname: newFields.name || '',\n\t\t\tcontent: newFields.content || '',\n\t\t\tid_folder: newFields.id_folder || ''\n\t\t});\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields to be updated\n\t\tconst { noteId } = this.props.match.params;\n\n\t\t// b/c id from datasource can be either text or number\n\t\tlet correct_type_noteId;\n\n\t\tif (config.DATASOURCE === 'postgresql') {\n\t\t\tcorrect_type_noteId = parseInt(this.state.id);\n\t\t} else {\n\t\t\tcorrect_type_noteId = this.state.id;\n\t\t}\n\n\t\tlet correct_type_folderId;\n\n\t\tif (config.DATASOURCE === 'postgresql') {\n\t\t\tcorrect_type_folderId = parseInt(this.state.id_folder);\n\t\t} else {\n\t\t\tcorrect_type_folderId = this.state.id_folder;\n\t\t}\n\n\t\tconst newNote = {\n\t\t\tid: correct_type_noteId,\n\t\t\tid_folder: correct_type_folderId,\n\t\t\tname: this.state.name,\n\t\t\tcontent: this.state.content,\n\t\t\tmodified: new Date()\n\t\t};\n\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.NOTES_ENDPOINT + `/${noteId}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\tbody: JSON.stringify(newNote),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) return res.json().then(error => Promise.reject(error));\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.resetFields(newNote);\n\t\t\t\tthis.context.updateNotes(newNote);\n\n\t\t\t\t// return to note folder\n\t\t\t\tthis.props.history.push(`/folders/${this.state.id_folder}`);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\terror(error);\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors, name, content, id_folder } = this.state;\n\t\tconst folders = this.context.folders;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Edit Note</legend>\n\t\t\t\t\t<label htmlFor=\"id_folder\">Folder</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"id_folder\"\n\t\t\t\t\t\tname=\"id_folder\"\n\t\t\t\t\t\taria-label=\"Folder Id\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"id_folderError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tvalue={id_folder}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select a folder</option>\n\t\t\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t\t\t<option key={folder.id} value={folder.id}>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t{errors.id_folder.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'id_folderError'} message={errors.id_folder} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"name\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteTitleError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'noteTitleError'} message={errors.name} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"content\">Description</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"content\"\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Description\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteDescriptionError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.content.length > 0 && (\n\t\t\t\t\t\t<ValidationError\n\t\t\t\t\t\t\tid={'noteDescriptionError'}\n\t\t\t\t\t\t\tmessage={errors.content}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Note\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default EditNote;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nimport config from './config';\n\n// when using dummyStore text datafile:\n// import dummyStore from './dummy-store';\n\n// using React.Context:\nimport NotefulContext from './NotefulContext';\n\nimport Header from './Header/Header';\n\nimport FolderList from './FolderList/FolderList';\nimport FolderItem from './FolderItem/FolderItem';\nimport NoteList from './NoteList/NoteList';\nimport Note from './Note/Note';\n\nimport AddFolder from './AddFolder/AddFolder';\nimport AddNote from './AddNote/AddNote';\n\nimport EditFolder from './EditFolder/EditFolder';\nimport EditNote from './EditNote/EditNote';\n\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/folders/:id_folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/notes/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderItem,\n\t\tsection: Note\n\t},\n\t{\n\t\tpath: '/add-folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddFolder\n\t},\n\t{\n\t\tpath: '/add-note',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddNote\n\t},\n\t{\n\t\tpath: '/edit-note/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: EditNote\n\t},\n\t{\n\t\tpath: '/edit-folder/:id_folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: EditFolder\n\t},\n\t{\n\t\tpath: '/delete-folder/:id_folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/:any/:any/:any',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: () => null,\n\t\tsection: () => 'Do not edit the  url!'\n\t}\n];\n\nclass App extends React.Component {\n\t// set default state variable values with hooks\n\t// const [folders, setFolders] = useState([]);\n\t// const [notes, setNotes] = useState([]);\n\t// const [foldersError, setFoldersError] = useState(null);\n\t// const [notesError, setNotesError] = useState(null);\n\n\tstate = {\n\t\tfolders: [],\n\t\tnotes: [],\n\t\tfoldersError: null,\n\t\tnotesError: null,\n\t\tdeleteFolderId: null\n\t};\n\n\t// to see foldersError in ui:\n\t// const [foldersError, setFoldersError] = useState({ value: 'foldersAPI errorMessage' });\n\n\t// to see notesError in ui:\n\t// const [notesError, setNotesError] = useState({value: 'notesAPI errorMessage'});\n\n\t// deleteNotes updates state\n\t// and inside render context is updated with values from state\n\t// then context is used to display values in FolderList and NoteList\n\t/*\n    After making successful a DELETE API request, you can use a this.state.notes.filter method along with setState to remove a note from state and update context.\n    */\n\tdeleteNote = noteId => {\n\t\tconst newNotes = this.state.notes.filter(note => note.id !== noteId);\n\t\tthis.setState({ notes: newNotes });\n\t};\n\n\tdeleteFolder = id_folder => {\n\t\tconst newFolders = this.state.folders.filter(\n\t\t\tfolder => folder.id !== id_folder\n\t\t);\n\t\tthis.setState({ folders: newFolders });\n\n\t\t// deleting a folder cascade deletes notes in the database\n\t\t// so need to update notes array in state\n\t\tthis.getNotes();\n\t};\n\n\taddNote = note => {\n\t\tthis.setState({ notes: [...this.state.notes, note] });\n\t};\n\n\taddFolder = folder => {\n\t\tthis.setState({ folders: [...this.state.folders, folder] });\n\t};\n\n\taddErrorNotes = error => {\n\t\tthis.setState({ notesError: error });\n\t};\n\n\taddErrorFolders = error => {\n\t\tthis.setState({ foldersError: error });\n\t};\n\n\t/*\n    // NOTE NOTE NOTE\n    // Pattern: every route is responsible for loading the data it needs from scratch\n\n    // So the component rendering the /detail/:id route needs to fetch data for itself, including the correct id to use from the url, via the props React Router provides.\n    */\n\n\tsetFolders = folders => {\n\t\tthis.setState({\n\t\t\tfolders,\n\t\t\terror: null\n\t\t});\n\t};\n\tsetNotes = notes => {\n\t\tthis.setState({\n\t\t\tnotes,\n\t\t\terror: null\n\t\t});\n\t};\n\n\tgetFolders = () => {\n\t\tfetch(config.FOLDERS_ENDPOINT, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(this.setFolders)\n\t\t\t// passes res to setFolders function\n\t\t\t// shortcut which equals .then(res => this.setFolders(res))\n\t\t\t.catch(error => this.setState({ foldersError: error }));\n\t};\n\n\tgetNotes = () => {\n\t\tfetch(config.NOTES_ENDPOINT, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(this.setNotes)\n\t\t\t// passes res to setNotes function\n\t\t\t// shortcut which equals .then(res => this.setNotes(res))\n\t\t\t.catch(error => this.setState({ notesError: error }));\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getFolders();\n\t\tthis.getNotes();\n\t}\n\n\tupdateFolders = updatedFolder => {\n\t\tconst newFolders = this.state.folders.map(folder =>\n\t\t\tfolder.id !== updatedFolder.id ? folder : updatedFolder\n\t\t);\n\n\t\tthis.setState({ folders: newFolders });\n\t};\n\n\tupdateNotes = updatedNote => {\n\t\tconst newNotes = this.state.notes.map(note =>\n\t\t\tnote.id !== updatedNote.id ? note : updatedNote\n\t\t);\n\n\t\tthis.setState({ notes: newNotes });\n\t};\n\n\thandleClickDeleteFolder = (id_folder, props) => {\n\t\tfetch(config.FOLDERS_ENDPOINT + `/${id_folder}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\t// I think b/c cors, typecode gives a res.status = 404 and an EMPTY error object when try to delete note so,\n\n\t\t\t\tif (!res.ok || res.status === '404') {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t// throw res.status instead of error b/c error is an empty object\n\t\t\t\t\t\tthrow res.status;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// call the callback function when the request is successful\n\t\t\t\t// this is where the App component can remove it from state\n\t\t\t\t// ie. update the folders stored in state\n\t\t\t\t// which also updates the folders stored in context\n\t\t\t\tthis.deleteFolder(id_folder);\n\n\t\t\t\t// remove id_folder from URL\n\t\t\t\tprops.history.push(`/`);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t// WORKAROUND to handle EMPTY error object and res.status = 404\n\t\t\t\tif (error !== 404) {\n\t\t\t\t\tthis.addErrorFolders(error);\n\t\t\t\t}\n\n\t\t\t\tif (error === 404) {\n\t\t\t\t\tthis.deleteFolder(id_folder);\n\n\t\t\t\t\t// remove id_folder from URL\n\t\t\t\t\tprops.history.push(`/`);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// create object to update the values stored in NotefulContext\n\t\tconst contextObj = {\n\t\t\tnotes: this.state.notes,\n\t\t\tfolders: this.state.folders,\n\t\t\tdeleteNote: this.deleteNote,\n\t\t\taddNote: this.addNote,\n\t\t\taddFolder: this.addFolder,\n\t\t\taddErrorNotes: this.addErrorNotes,\n\t\t\taddErrorFolders: this.addErrorFolders,\n\t\t\tnotesError: this.notesError,\n\t\t\tupdateFolders: this.updateFolders,\n\t\t\tupdateNotes: this.updateNotes,\n\t\t\thandleClickDeleteFolder: this.handleClickDeleteFolder\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header />\n\t\t\t\t{/* actually update the values stored in NotefulContext by passing contextObj into value\n\n                Use the Provider to make values available to all children/grandchildren/subcomponents\n\n                See: https://reactjs.org/docs/context.html#caveats\n\n                -- the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value\n                */}\n\t\t\t\t<NotefulContext.Provider value={contextObj}>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"aside\">\n\t\t\t\t\t\t\t{this.state.foldersError && (\n\t\t\t\t\t\t\t\t<p className=\"error\">{this.state.foldersError.value}</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{routes.map(({ path, exact, aside: A }) => (\n\t\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={A} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t{/* NOTE:\n                         CAN use render props to pass unfinishedMessage prop via route\n                         AND\n                         to pass location, match and history props to the component so that in the component I have access to the history object to push a new location into\n\n                                    render={props => (\n                                        <S\n                                        {...props}\n                                        unfinishedMessage={unfinishedMessage} />\n                                    )}\n\n                        can also pass unfinishedMessage via Context and do:\n                        component={S}\n\n\t\t\t\t\t\t---- ALTERNATIVE:\n\n\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\texact={exact}\n\t\t\t\t\t\t\t\trender={props => <S {...props} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\n                        */}\n\n\t\t\t\t\t\t\t{this.state.notesError && (\n\t\t\t\t\t\t\t\t<p className=\"error\">{this.state.notesError.value}</p>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={S} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</article>\n\t\t\t\t\t</main>\n\t\t\t\t</NotefulContext.Provider>\n\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}